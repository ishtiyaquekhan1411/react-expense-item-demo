{"version":3,"sources":["components/UI/Card.js","constants.js","components/Expenses/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Expenses/Expenses.js","components/ExpenseForm/ExpenseForm.js","App.js","index.js"],"names":["Card","props","classes","className","children","EXPENSES","id","title","amount","date","Date","TITLE_REGEX","NUMBER_REGEX","YEARS","ExpenseFilter","value","selected","onChange","event","onChangeFilter","target","map","year","index","onClick","onClearFilter","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","datapoints","datapoint","totalMaximum","max","ExpenseChart","expenses","expense","getMonth","ExpenseDate","month","toLocaleString","day","getFullYear","ExpenseItem","url","src","alt","preventDefault","onEditExpenseData","onRemoveExpenseData","ExpenseList","items","length","item","Expenses","useState","filterSelect","setFilterSelect","filterItems","filter","toString","filterYear","ExpenseForm","console","log","initialUserInput","enteredTitle","enteredAmount","enteredDate","imageUrl","userInput","setUserInput","userInputError","setuserInputError","isEditing","setIsEditing","useEffect","toISOString","slice","changeHandler","name","prevState","uploadImageHandler","a","data","FormData","append","files","fetch","method","body","response","responseData","json","onSubmit","errors","Object","keys","forEach","key","test","isNaN","parse","validateInput","values","every","expenseData","random","onAddUpdateExpense","htmlFor","type","min","step","onCancel","App","setExpenses","currentExpense","setCurrentExpense","itemIndex","findIndex","itemId","updatedExpenses","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82148192.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","export const EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nexport const TITLE_REGEX = /^(([a-zA-Z])*\\s?([a-zA-Z]))*$/;\nexport const NUMBER_REGEX = /^([0-9])*\\.?([0-9])+$/;\n\nexport const YEARS = ['2023', '2022', '2021', '2020', '2019'];","import React from 'react';\nimport './ExpenseFilter.css';\nimport { YEARS } from '../../constants';\n\nconst ExpenseFilter = (props) => {\n  const dropDownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  }\n\n  return (\n    <div className=\"expense-filters\">\n      <div className=\"expense-filter\">\n        <label>Filter by Year</label>\n        <div>\n          {\n            <select value={props.selected} onChange={dropDownChangeHandler}>\n              {!props.selected && <option value=''></option>}\n              {YEARS.map((year, index) => <option key={index} value={year}>{year}</option>)}\n            </select>\n          }\n          { props.selected && <button onClick={props.onClearFilter}>Clear Filter</button> }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ExpenseFilter;","import React from 'react';\nimport './ChartBar.css';\n\nexport const ChartBar = (props) => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{height: barFillHeight}}\n        />\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  )\n}\n\nexport default ChartBar;","import React from 'react';\nimport ChartBar from './ChartBar';\nimport './Chart.css';\n\nconst Chart = (props) => {\n  const dataPointValues = props.datapoints.map((datapoint) => datapoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return(\n    <div className=\"chart\">\n      {\n        props.datapoints.map((datapoint) => (\n          <ChartBar \n            key={datapoint.label}\n            value={datapoint.value}\n            maxValue={totalMaximum}\n            label={datapoint.label}\n          />\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Chart;","import React from 'react';\nimport Chart from '../Chart/Chart';\n\nconst ExpenseChart = (props) => {\n  const datapoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 }\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    datapoints[expenseMonth].value += expense.amount\n  }\n\n  return <Chart datapoints={datapoints}/>\n}\n\nexport default ExpenseChart;","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport ExpenseDate from './ExpenseDate';\nimport Card from '../UI/Card';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  const removeHandler = (event) => {\n    event.preventDefault();\n\n    props.onRemoveExpenseData(props.id)\n  }\n\n  const editHandler = (event) => {\n    event.preventDefault();\n\n    props.onEditExpenseData(props.id)\n  }\n\n  return (\n    <Card className='expense-item'>\n      <ExpenseDate date={props.date} />\n      <div className='expense-item__description'>\n        <h2>{props.title}</h2>\n        {props.url && <img src={props.url} alt='' /> }\n        <div className='expense-item__price'>${props.amount}</div>\n      </div>\n      <button onClick={editHandler}>Edit</button>\n      <button onClick={removeHandler}>Remove</button>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import React from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './ExpenseList.css';\n\nconst ExpenseList = (props) => {\n  if (props.items.length === 0) {\n    return (<p>No Expense found</p>)\n  }\n\n  return (\n    props.items.map(item => (\n        <ExpenseItem\n          key={item.id}\n          id={item.id}\n          title={item.title}\n          amount={item.amount}\n          date={item.date}\n          onRemoveExpenseData={props.onRemoveExpenseData}\n          onEditExpenseData={props.onEditExpenseData}\n          url={item.url}\n        />\n    ))\n  )\n}\n\nexport default ExpenseList;","import React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport ExpenseFilter from './ExpenseFilter';\nimport ExpenseChart from './ExpenseChart';\nimport ExpenseList from './ExpenseList';\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n  const [filterSelect, setFilterSelect] = useState('');\n\n  const changeFilterHandler = (filterYear) => setFilterSelect(filterYear);\n\n  const clearFilterHandler = () => setFilterSelect('');\n\n  const filterItems = props.items.filter((item) => {\n    return (filterSelect === '') ? true : item.date.getFullYear().toString() === filterSelect\n  });\n\n  return (\n    <Card className=\"expenses\">\n      { props.items.length > 0 &&\n        <>\n          <ExpenseFilter\n            selected={filterSelect}\n            onChangeFilter={changeFilterHandler}\n            onClearFilter={clearFilterHandler}\n          />\n          <ExpenseChart expenses={filterItems} />\n        </>\n      }\n      <ExpenseList\n        items={filterItems}\n        onRemoveExpenseData={props.onRemoveExpenseData}\n        onEditExpenseData={props.onEditExpenseData}\n      />\n    </Card>\n  )\n}\n\nexport default Expenses;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { TITLE_REGEX, NUMBER_REGEX } from '../../constants'\nimport Card from '../UI/Card';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n\n  console.log(props);\n\n  const initialUserInput = {\n    enteredTitle: '',\n    enteredAmount: '',\n    enteredDate: '',\n    imageUrl: ''\n  };\n\n  const [userInput, setUserInput] = useState(initialUserInput);\n  const [userInputError, setuserInputError] = useState(initialUserInput);\n  const [isEditing, setIsEditing] = useState(false);\n\n  useEffect(() => {\n    if (props.expense.id) {\n      setUserInput({\n        enteredTitle: props.expense.title,\n        enteredAmount: props.expense.amount,\n        enteredDate: props.expense.date.toISOString().slice(0, 10),\n        imageUrl: props.expense.url\n      })\n      setIsEditing(true);\n    }\n  }, [props.expense])\n\n  const changeHandler = (event) => {\n    const { name, value } = event.target;\n    setUserInput(prevState => ({ ...prevState, [name]: value }));\n  }\n\n  const uploadImageHandler = async (event) => {\n    event.preventDefault();\n\n    const data = new FormData();\n    data.append('file', event.target.files[0]);\n    data.append('upload_preset', 'j0j1j50n');\n    data.append('cloud_name', 'dzjciizhx');\n    const response = await fetch(\"https://api.cloudinary.com/v1_1/dzjciizhx/image/upload\", {\n      method: 'POST',\n      body: data\n    });\n    const responseData = response.json();\n    setUserInput(prevState => ({ ...prevState, imageUrl: responseData.url }));\n  }\n  \n  const validateInput = () => {\n    const errors = {...initialUserInput};\n    Object.keys(errors).forEach((key) => {\n      switch (key) {\n        case 'enteredTitle':\n          if (!TITLE_REGEX.test(userInput.enteredTitle)) {\n            errors[key] = 'Invalid Title.'\n          }\n          break;\n        case 'enteredAmount':\n          if (!NUMBER_REGEX.test(userInput.enteredAmount)) {\n            errors[key] = 'Invalid Amount.';\n          }\n          break;\n        case 'enteredDate':\n          if (isNaN(Date.parse(userInput.enteredDate))) {\n            errors[key] = 'Invalid date';\n          }\n          break;\n        default:\n          errors[key] = '';\n      }\n    })\n    return errors;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const errors = validateInput();\n    const isValidSubmission = Object.values(errors).every(value => value === '');\n    if (isValidSubmission) {\n      const expenseData = {\n        title: userInput.enteredTitle,\n        amount: userInput.enteredAmount,\n        date: new Date(userInput.enteredDate),\n        url: userInput.imageUrl,\n        id: props.expense.id || Math.random().toString()\n      }\n      props.onAddUpdateExpense(expenseData);\n      setUserInput(initialUserInput);\n      setuserInputError(initialUserInput);\n    } else {\n      setuserInputError(errors);\n    }\n  }\n\n  const startEditingHandler = () => setIsEditing(true);\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n    props.onCancel();\n  }\n\n  return (\n    <Card className='expense'>\n      {\n        (!props.expense.id && !isEditing) && (\n          <div className='expense__actions'>\n            <button onClick={startEditingHandler}>Add new Expense</button>\n          </div>\n        )\n      }\n      { isEditing &&\n        <form onSubmit={submitHandler}>\n        <div className='expense__controls'>\n          <div className='expense__control'>\n            <label htmlFor='title'>Title</label>\n            <input\n              className={ userInputError.enteredTitle && 'expense__input_error'}\n              type='text'\n              id='title'\n              value={userInput.enteredTitle}\n              name='enteredTitle'\n              onChange={changeHandler}\n            />\n            {\n              userInputError.enteredTitle && <span>{userInputError.enteredTitle}</span>\n            }\n          </div>\n          <div className='expense__control'>\n            <label htmlFor='amount'>Amount</label>\n            <input\n              className={ userInputError.enteredAmount && 'expense__input_error'}\n              type='number'\n              id='amount'\n              value={userInput.enteredAmount}\n              name='enteredAmount'\n              min='0.01'\n              step='0.01'\n              onChange={changeHandler}\n            />\n            {\n              userInputError.enteredAmount && <span>{userInputError.enteredAmount}</span>\n            }\n          </div>\n          <div className='expense__control'>\n          <label htmlFor='date'>Date</label>\n            <input\n              className={ userInputError.enteredDate && 'expense__input_error'}\n              type='date'\n              id='date'\n              min='2021-01-01'\n              max='2022-12-31'\n              value={userInput.enteredDate}\n              name='enteredDate'\n              onChange={changeHandler}\n            />\n            {\n              userInputError.enteredDate && <span>{userInputError.enteredDate}</span>\n            }\n          </div>\n          <div className='expense__control'>\n            <div className='expense__image'>\n              <label className=\"expense__image-label\">\n                <input className=\"expense__input_error\" type=\"file\" onChange={uploadImageHandler} />\n                <i className=\"fa fa-cloud-upload\" /> Attach Image\n              </label>\n            </div>\n          </div>\n        </div>\n        <div className='expense__actions'>\n          <button onClick={stopEditingHandler}>Cancel</button>\n          <button type='submit'>{props.expense.id ? 'Update Expense' : 'Add Expense'}</button>\n        </div>\n        </form>\n      }\n    </Card>\n  ) \n}\n\nexport default ExpenseForm;\n\nExpenseForm.propTypes = {\n  expense: PropTypes.shape({\n    id: PropTypes.string.isRequired\n  })\n}","import React, { useState } from 'react';\n\nimport Expenses from './components/Expenses/Expenses';\nimport ExpenseForm from './components/ExpenseForm/ExpenseForm';\nimport { EXPENSES } from './constants';\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(EXPENSES);\n  const [currentExpense, setCurrentExpense] = useState({});\n\n  const addUpdateExpenseHandler = (item) => {\n    const itemIndex = expenses.findIndex((expense) => expense.id === item.id);\n    if (itemIndex !== -1) {\n      expenses[itemIndex] = item\n      setExpenses(expenses);\n    } else {\n      setExpenses(prevState => ([...prevState, item]));\n    }\n    setCurrentExpense({});\n  };\n\n  const removeExpenseHandler = (itemId) => {\n    const updatedExpenses = expenses.filter((expense) => expense.id !== itemId);\n    setExpenses([...updatedExpenses]);\n    setCurrentExpense({});\n  };\n\n  const editExpenseHandler = (itemId) => {\n    const currentExpense = expenses.find((expense) => expense.id === itemId);\n    setCurrentExpense(currentExpense);\n  }\n\n  const resetCurrentExpenseHandler = () => setCurrentExpense({})\n\n  return (\n    <div>\n      <ExpenseForm\n        onAddUpdateExpense={addUpdateExpenseHandler}\n        expense={currentExpense}\n        onCancel={resetCurrentExpenseHandler}\n      />\n      <Expenses\n        items={expenses}\n        onRemoveExpenseData={removeExpenseHandler}\n        onEditExpenseData={editExpenseHandler}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}